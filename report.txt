import React, { useState } from 'react';
import { Drawer, CssBaseline, AppBar, Toolbar, Typography, Box, IconButton, Button, Divider, List, ListItem, ListItemIcon, ListItemText, Tooltip } from '@mui/material';
import MenuIcon from '@mui/icons-material/Menu';
import InboxIcon from '@mui/icons-material/Inbox';
import MailIcon from '@mui/icons-material/Mail';

const drawerWidth = 240;

function ResponsiveDrawer() {
    const [drawerOpen, setDrawerOpen] = useState(true);

    const handleDrawerToggle = () => {
        setDrawerOpen(!drawerOpen);
    };

    const menuItems = [
        { text: 'Inbox', icon: <InboxIcon /> },
        { text: 'Mail', icon: <MailIcon /> },
        // Add more items here as needed
    ];

    return (
        <Box sx={{ display: 'flex', width: '100vw' }}>
            <CssBaseline />
            <AppBar position="fixed" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>
                <Toolbar>
                    <IconButton
                        color="inherit"
                        aria-label="open drawer"
                        edge="start"
                        onClick={handleDrawerToggle}
                        sx={{ marginRight: 2, ...(drawerOpen && { display: 'none' }) }}
                    >
                        <MenuIcon />
                    </IconButton>
                    <Typography variant="h6" noWrap component="div">
                        Responsive Drawer
                    </Typography>
                </Toolbar>
            </AppBar>
            <Drawer
                variant="persistent"
                open={drawerOpen}
                onClose={handleDrawerToggle}
                sx={{
                    width: drawerOpen ? drawerWidth : 0,
                    flexShrink: 0,
                    '& .MuiDrawer-paper': {
                        width: drawerWidth,
                        boxSizing: 'border-box',
                        display: 'flex',
                        flexDirection: 'column',
                        justifyContent: 'space-between',
                    },
                }}
            >
                <Box sx={{ overflow: 'auto', flexGrow: 1 }}>
                    <Toolbar />
                    <List>
                        {menuItems.map((item, index) => (
                            <Tooltip key={item.text} title={drawerOpen ? '' : item.text} placement="right">
                                <ListItem button>
                                    <ListItemIcon>
                                        {item.icon}
                                    </ListItemIcon>
                                    {drawerOpen && (
                                        <ListItemText primary={item.text} />
                                    )}
                                </ListItem>
                            </Tooltip>
                        ))}
                    </List>
                </Box>
                <Box>
                    <Divider />
                    <Button
                        onClick={handleDrawerToggle}
                        fullWidth
                    >
                        {drawerOpen ? '>< Collapse' : '<> Expand'}
                    </Button>
                </Box>
            </Drawer>
            <Box
                component="main"
                sx={{
                    flexGrow: 1,
                    p: 3,
                    width: `calc(100vw - ${drawerOpen ? drawerWidth : 0}px)`,
                    transition: (theme) =>
                        theme.transitions.create('width', {
                            easing: theme.transitions.easing.sharp,
                            duration: theme.transitions.duration.leavingScreen,
                        }),
                }}
            >
                <Toolbar />
                <Typography paragraph>
                    Main content goes here.
                </Typography>
            </Box>
        </Box>
    );
}

export default ResponsiveDrawer;
