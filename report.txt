import React, { useContext } from "react";
import {
  ComposedChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
} from "recharts";
import { Paper, Typography } from "@mui/material";
import { VacationContext } from "../context/VacationContext";
import dayjs from "dayjs"; // To help with date formatting

const VacationGraph = () => {
  // Access data from the context
  const { isLoading, error, submittedValues } = useContext(VacationContext);
  const data = submittedValues; // Assuming data comes from here

  // Check if the data is available
  if (!data || !Array.isArray(data)) {
    return <Typography>No data available</Typography>;
  }

  // Format opcDate and group data by vacation
  const formattedData = data.map(item => ({
    opcDate: dayjs(item.opcDate, "YYYYMMDD").format("DD/MM/YYYY"), // Convert opcDate to a readable format
    [`vacation${item.vacation}`]: item.objectIntegratedNb, // Dynamically assign vacation number
  }));

  // Group data by opcDate, combining vacations for the same date
  const groupedData = Object.values(
    formattedData.reduce((acc, item) => {
      const dateKey = item.opcDate;
      if (!acc[dateKey]) {
        acc[dateKey] = { opcDate: dateKey };
      }
      Object.keys(item).forEach(key => {
        if (key !== "opcDate") {
          acc[dateKey][key] = item[key];
        }
      });
      return acc;
    }, {})
  );

  return (
    <Paper sx={{ padding: 3 }}>
      <Typography variant="h6" gutterBottom>
        Volume total d'int√©gration selon la vacation et par jour
      </Typography>
      <ResponsiveContainer width="100%" height={300}>
        <ComposedChart
          data={groupedData}
          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}
        >
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="opcDate" />
          <YAxis />
          <Tooltip />
          <Legend />

          {/* Lines for each vacation */}
          <Line
            type="monotone"
            dataKey="vacation1"
            stroke="#1f77b4"
            dot={{ r: 6 }}
            activeDot={{ r: 8 }}
            name="Vacation 1"
            legendType="circle"
          />
          <Line
            type="monotone"
            dataKey="vacation2"
            stroke="#ff7f0e"
            dot={{ r: 6 }}
            activeDot={{ r: 8 }}
            name="Vacation 2"
            legendType="circle"
          />
          <Line
            type="monotone"
            dataKey="vacation3"
            stroke="#2ca02c"
            dot={{ r: 6 }}
            activeDot={{ r: 8 }}
            name="Vacation 3"
            legendType="circle"
          />
          <Line
            type="monotone"
            dataKey="vacation4"
            stroke="#d62728"
            dot={{ r: 6 }}
            activeDot={{ r: 8 }}
            name="Vacation 4"
            legendType="circle"
          />
          <Line
            type="monotone"
            dataKey="vacation5"
            stroke="#9467bd"
            dot={{ r: 6 }}
            activeDot={{ r: 8 }}
            name="Vacation 5"
            legendType="circle"
          />
          <Line
            type="monotone"
            dataKey="vacation6"
            stroke="#8c564b"
            dot={{ r: 6 }}
            activeDot={{ r: 8 }}
            name="Vacation 6"
            legendType="circle"
          />
          <Line
            type="monotone"
            dataKey="vacation7"
            stroke="#e377c2"
            dot={{ r: 6 }}
            activeDot={{ r: 8 }}
            name="Vacation 7"
            legendType="circle"
          />
          <Line
            type="monotone"
            dataKey="vacation8"
            stroke="#7f7f7f"
            dot={{ r: 6 }}
            activeDot={{ r: 8 }}
            name="Vacation 8"
            legendType="circle"
          />
        </ComposedChart>
      </ResponsiveContainer>
    </Paper>
  );
};

export default VacationGraph;
