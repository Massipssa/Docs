import React, { useState } from 'react';
import {
  Box,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  Checkbox,
  ListItemText,
  OutlinedInput,
  IconButton,
} from '@mui/material';
import ClearIcon from '@mui/icons-material/Clear';

const options = [
  'Option 1',
  'Option 2',
  'Option 3',
  'Option 4',
  'Option 5',
  'Option 6',
  'Option 7',
  'Option 8',
  'Option 9',
  'Option 10',
];

function MultiChoiceDropdown() {
  const [selectedOptions, setSelectedOptions] = useState([]);

  const handleChange = (event) => {
    const { target: { value } } = event;
    const newSelectedOptions = typeof value === 'string' ? value.split(',') : value;

    if (newSelectedOptions.length > selectedOptions.length) {
      setSelectedOptions(options);
    } else {
      setSelectedOptions(newSelectedOptions);
    }
  };

  const handleSelectAll = () => {
    if (selectedOptions.length === options.length) {
      setSelectedOptions([]); // Deselect all if already selected
    } else {
      setSelectedOptions(options); // Select all options
    }
  };

  const handleClearSelection = (e) => {
    e.stopPropagation(); // Prevent the dropdown from opening when clearing
    setSelectedOptions([]);
  };

  return (
    <Box sx={{ width: 300, mb: 2 }}>
      <FormControl fullWidth>
        <InputLabel id="multi-select-label">Select Options</InputLabel>
        <Select
          labelId="multi-select-label"
          multiple
          value={selectedOptions}
          onChange={handleChange}
          input={<OutlinedInput label="Select Options" />}
          renderValue={(selected) => (
            <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
              <span>{selected.join(', ')}</span>
              {selected.length > 0 && (
                <IconButton
                  size="small"
                  onClick={handleClearSelection}
                  sx={{
                    padding: 0,
                    marginLeft: 'auto',
                    marginRight: -1, // Adjust to align the button inside the select box
                  }}
                >
                  <ClearIcon fontSize="small" />
                </IconButton>
              )}
            </Box>
          )}
          MenuProps={{
            PaperProps: {
              style: {
                maxHeight: 300,
                width: 300,
              },
            },
          }}
        >
          {/* Select All Option */}
          <MenuItem value="select-all" onClick={handleSelectAll}>
            <Checkbox
              checked={selectedOptions.length === options.length}
              indeterminate={selectedOptions.length > 0 && selectedOptions.length < options.length}
            />
            <ListItemText primary="Select All" />
          </MenuItem>

          {/* All Options */}
          {options.map((option) => (
            <MenuItem key={option} value={option}>
              <Checkbox checked={selectedOptions.indexOf(option) > -1} />
              <ListItemText primary={option} />
            </MenuItem>
          ))}
        </Select>
      </FormControl>
    </Box>
  );
}

export default MultiChoiceDropdown;
