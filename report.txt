{% macro store_test_results(results, log_tbl=ref('dp_do_tools', 'dq_issue_log'), batch=1000) %}
    {% set enable_store_results = var('dbt_do_tools_enable_store_test_results', false) %}
    {% if not enable_store_results %}
        {{ log("Storing test results functionality is NOT enabled.", true) }}
        {{ return() }}
    {% endif %}

    {# Filter and prepare test results #}
    {% set filtered_results = [] %}
    {% for result in results %}
        {% if result.resource_type | lower == 'test' and result.status | lower not in ['error', 'skipped'] %}
            {% do filtered_results.append(result) %}
        {% endif %}
    {% endfor %}

    {# Exit if no results #}
    {% if filtered_results | length == 0 %}
        {{ log("No test results to process.", true) }}
        {{ return() }}
    {% endif %}

    {# Chunk results into batches #}
    {% set total_results = filtered_results | length %}
    {% for i in range(0, total_results, batch) %}
        {% set chunk = filtered_results[i:i+batch] %}

        INSERT INTO {{ log_tbl }}
        SELECT 
            '{{ execute_at }}' AS check_timestamp,
            table_name,
            table_query,
            column_name,
            ref_table,
            ref_column,
            dq_issue_type,
            dq_invocation_id AS invocation_id,
            agg_model,
            severity_config AS severity,
            test_kpi_category_config AS kpi_category,
            no_of_records,
            no_of_records_scanned,
            no_of_records_failed,
            no_of_table_columns,
            test_unique_id
        FROM UNNEST(
            {{ chunk }}
        );

        {{ log("Inserted batch of size " ~ (chunk | length) ~ " into " ~ log_tbl, true) }}
    {% endfor %}
{% endmacro %}
