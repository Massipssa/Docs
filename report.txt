  test("addRowColumn should add a row_number column") {
    val df = Seq("a", "b", "c").toDF("value")
    val resultDf = DfUtil.addRowColumn(df)

    assert(resultDf.columns.contains("ROW_NUMBER_COL"))

    val rowNumbers = resultDf.select("ROW_NUMBER_COL").as[Int].collect()
    assert(rowNumbers.sorted sameElements Array(1, 2, 3))
  }

  test("listColumnAsListStr should return values from specified column as List") {
    val df = Seq("x", "y", "z").toDF("letters")

    val result = DfUtil.listColumnAsListStr(df, "letters")

    assert(result == List("x", "y", "z"))
  }

  test("dfToMap should convert two-column DataFrame to Map") {
    val data = Seq(("k1", "v1"), ("k2", "v2"))
    val df = data.toDF("key", "value")

    val result = DfUtil.dfToMap(df, "key", "value")

    assert(result == Map("k1" -> "v1", "k2" -> "v2"))
  }
