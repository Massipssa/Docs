from airflow.utils.task_group import TaskGroup
from airflow.decorators import task

def split_list_equally(lst, n):
    """Split une liste en n morceaux aussi égaux que possible."""
    k, m = divmod(len(lst), n)
    return [lst[i * k + min(i, m):(i + 1) * k + min(i + 1, m)] for i in range(n)]

def cft_receive_vacation(dag_id: str):
    with TaskGroup(group_id="vacation_transfers", tooltip="Split & Transfer") as transfer_group:
        ls_list = get_ls_list_somehow()  # ← Tu récupères ça depuis list_files_from_fgw()

        split_parts = split_list_equally(ls_list, 5)

        for i, chunk in enumerate(split_parts):
            @task(task_id=f"put-files-in-transfi-part-{i+1}")
            def transfer_chunk(data=chunk):
                return put_files_in_transfi(data)

            transfer_chunk()  # Exécute chaque sous-tâche

    return transfer_group
