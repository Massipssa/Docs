export const ClickableProjectCard = ({
  item,
  onClick,
  showActions,
  displayProjectDescription,
  critical,
  clickedCard,
}) => {
  return (
    <Card
      variant="outlined"
      key={item.name}
      onClick={() => onClick(item.name)}
      sx={{
        boxShadow: 'none',
        display: 'flex',
        justifyContent: 'center', // Centers the text in the card
        alignItems: 'center',
        textAlign: 'center', 
        width: '100%',
        height: 180,
        border: '1px solid',
        borderColor: clickedCard === item.name ? setColor(item, critical) : 'white',
        cursor: 'pointer',
        position: 'relative', // Make the card a positioned element for absolute positioning
      }}
    >
      {/* Centered text */}
      <CardContent sx={{ flexGrow: 1 }}>
        <Typography
          variant="subtitle2"
          sx={{
            whiteSpace: 'normal',
            wordWrap: 'break-word', // Break long words
            lineHeight: '1.2em',
            overflow: 'hidden', // Hide overflow if text exceeds the card
            display: '-webkit-box',
            WebkitLineClamp: 3, // Limit to 3 lines
            WebkitBoxOrient: 'vertical',
            textAlign: 'center', // Ensure the text is centered
          }}
        >
          {item.name}
        </Typography>
      </CardContent>

      {/* Icon aligned to the right bottom */}
      {showActions && (
        <CardActions
          sx={{
            position: 'absolute', // Absolutely position the icon
            bottom: 8, // 8px from the bottom
            right: 8, // 8px from the right
          }}
        >
          <IconButton>
            <VisibilityOutlinedIcon />
          </IconButton>
        </CardActions>
      )}
    </Card>
  );
};
