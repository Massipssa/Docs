// IntegrationTable.tsx

import React, { useState, useMemo } from 'react';
import {
  Paper,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  TextField,
  Box,
  Chip,
} from '@mui/material';
import { LIGHT_GRAY_COLOR } from '@constants/color.constant';
import { getCellBackgroundColor } from './util';

interface IntegrationTableProps {
  uniqueDates: string[];
  data: any[];
  filteredData: any[];
  handleCellClick: (vacationForDate: any) => void;
}

// Reusable table component to render the Integration Table
const IntegrationTable: React.FC<IntegrationTableProps> = ({ uniqueDates, data, filteredData, handleCellClick }) => {
  const [searchQuery, setSearchQuery] = useState<string>('');

  // Memoized filtered data based on the search query
  const searchedFilteredData = useMemo(() => {
    if (!searchQuery) return filteredData;
    return filteredData.filter(cre => cre.toLowerCase().includes(searchQuery.toLowerCase()));
  }, [searchQuery, filteredData]);

  return (
    <>
      {/* Search Bar */}
      <Box mb={2} display="flex" justifyContent="flex-start">
        <TextField
          label="Rechercher un CRE..."
          variant="outlined"
          size="small"
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          sx={{ width: '300px' }}
        />
      </Box>

      {/* Table */}
      <TableContainer component={Paper} sx={{ maxHeight: 400, boxShadow: 'none', border: '1px solid #0000001a' }}>
        <Table stickyHeader size="small">
          {/* Table Head */}
          <TableHead>
            <TableRow>
              <TableCell sx={{ bgcolor: LIGHT_GRAY_COLOR }}>
                <strong>CRE</strong>
              </TableCell>
              {uniqueDates.map((date, index) => (
                <TableCell key={index} align="center" sx={{ bgcolor: LIGHT_GRAY_COLOR }}>
                  <strong>{date}</strong>
                </TableCell>
              ))}
            </TableRow>
          </TableHead>

          {/* Table Body */}
          <TableBody>
            {searchedFilteredData.map((creName, index) => (
              <TableRow key={index}>
                {/* CRE Name Column */}
                <TableCell>{creName}</TableCell>

                {/* Vacation/OPC Date Columns */}
                {uniqueDates.map((date, dateIndex) => {
                  const vacationForDate = data.find(
                    (item) => item.objectName === creName && item.opcDate === date
                  );

                  return (
                    <TableCell key={dateIndex} align="center">
                      <Chip
                        label={
                          vacationForDate
                            ? `${vacationForDate.vacation}:${vacationForDate.opcDate}`
                            : '-'
                        }
                        sx={{
                          backgroundColor: vacationForDate
                            ? getCellBackgroundColor(vacationForDate.status)
                            : 'white',
                          cursor: vacationForDate ? 'pointer' : 'default',
                        }}
                        onClick={() => vacationForDate && handleCellClick(vacationForDate)}
                      />
                    </TableCell>
                  );
                })}
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>
    </>
  );
};

export default React.memo(IntegrationTable);
