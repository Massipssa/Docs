import React, { useState, useCallback } from 'react';
import { Box, Grid } from '@mui/material';
import IntegrationDrawer from '../Drawer/IntegrationDrawer';
import CreBarChart from '../Synthese/CRE/ReceptionChart';
import CardsSyntheseTitle from '../cards/common/CardSyntheseTitle';
import { DEFAULT_SEARCH_INTEGRATION } from '@constants/Default.constant';
import IntegrationCre from '../IntegrationCre/IntegrationCre';

interface SubmittedValues {
  [key: string]: any;
}

const IntegrationFilter = () => {
  const [submittedValues, setSubmittedValues] = useState<SubmittedValues>(DEFAULT_SEARCH_INTEGRATION);

  const handleValueChange = useCallback((field: string, value: any) => {
    setSubmittedValues((prevValues) => ({
      ...prevValues,
      [field]: value,
    }));
  }, []);

  return (
    <Box container spacing={3}>
      <Grid item xs={12} md={12}>
        <IntegrationDrawer
          values={submittedValues}
          onValueChange={handleValueChange}
        />
      </Grid>

      <Grid item xs={12} md={12}>
        <IntegrationCre values={submittedValues} />
      </Grid>

      <Grid item xs={12} md={6}>
        <CardsSyntheseTitle title="Todo" />
        <CreBarChart />
      </Grid>
    </Box>
  );
};

export default IntegrationFilter;
