test("replaceTwoDoubleQuotesWithSingleDoubleQuote should replace two double quotes with one and trim edges") {
  val input = "\"\"Hello World\"\""
  val result = GeneralUtility.replaceTwoDoubleQuotesWithSingleDoubleQuote(input)

  assert(result == "\"Hello World\"")
}


test("hashString should return MD5 hash of a string") {
  val input = "hello"
  val result = GeneralUtility.hashString(input, "MD5")

  // Precomputed MD5 hash of "hello"
  assert(result == "5d41402abc4b2a76b9719d911017c592")
}

test("hashString should return EMPTY_STRING when input value is empty") {
  val result = GeneralUtility.hashString("", "MD5")
  assert(result == GeneralConstants.EMPTY_STRING)
}

test("hashString should throw exception for empty hash method") {
  val thrown = intercept[IllegalArgumentException] {
    GeneralUtility.hashString("hello", "")
  }
  assert(thrown.getMessage == "Invalid hash method provided.")
}


test("streamToString should return string from InputStream") {
  val content = "test content"
  val stream = new ByteArrayInputStream(content.getBytes("UTF-8"))

  val result = GeneralUtility.streamToString(stream)

  assert(result == content)
}

test("streamToString should return EMPTY_STRING when stream is null") {
  val result = GeneralUtility.streamToString(null)

  assert(result == GeneralConstants.EMPTY_STRING)
}
