import com.amazonaws.services.s3.model._
import scala.collection.mutable.ListBuffer
import scala.jdk.CollectionConverters._

def multipartUpload(s3Client: AmazonS3, bucket: String, key: String, data: Array[Byte]): Unit = {
  val uploadId = s3Client.initiateMultipartUpload(new InitiateMultipartUploadRequest(bucket, key)).getUploadId
  val partETags = ListBuffer[PartETag]()
  val partSize = 5 * 1024 * 1024 // 5MB
  val totalSize = data.length
  var start = 0
  var partNumber = 1

  while (start < totalSize) {
    val end = Math.min(start + partSize, totalSize)
    val partData = data.slice(start, end)

    val inputStream = new ByteArrayInputStream(partData)
    val uploadPartRequest = new UploadPartRequest()
      .withBucketName(bucket)
      .withKey(key)
      .withUploadId(uploadId)
      .withPartNumber(partNumber)
      .withInputStream(inputStream)
      .withPartSize(partData.length)

    val partResult = s3Client.uploadPart(uploadPartRequest)
    partETags.append(partResult.getPartETag)

    println(s"Partie $partNumber uploadée: ${partData.length} bytes")
    start = end
    partNumber += 1
  }

  // ✅ Convert Scala ListBuffer to Java List
  s3Client.completeMultipartUpload(new CompleteMultipartUploadRequest(bucket, key, uploadId, partETags.asJava))
  println(s"Upload terminé pour $key ✅")
}
