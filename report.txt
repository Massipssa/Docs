#!/bin/bash

# Define paths
SRC_PATH="secret/path1"
DEST_PATH="secret/path2"

# Function to check Vault KV version for a given path
get_kv_version() {
  vault secrets list -format=json | jq -r 'to_entries[] | select(.key == ("'"$1"'")) | .value.options.version'
}

# Check if the source path exists and the vault is reachable
if ! vault kv get $SRC_PATH &> /dev/null; then
  echo "Error: Source path $SRC_PATH does not exist or Vault is unreachable."
  exit 1
fi

# Detect whether the secret engine is KV Version 1 or Version 2
MOUNT_PATH=$(echo "$SRC_PATH" | cut -d '/' -f 1)
KV_VERSION=$(get_kv_version "$MOUNT_PATH")

if [ "$KV_VERSION" == "2" ]; then
  # If KV Version 2 is detected
  echo "Detected KV Version 2"

  # Read the secret from path1
  SECRET=$(vault kv get -format=json $SRC_PATH | jq -r '.data.data')

  # Write the secret to path2
  vault kv put $DEST_PATH $(echo $SECRET | jq -r 'to_entries | map("\(.key)=\(.value|tostring)") | .[]')

elif [ "$KV_VERSION" == "1" ]; then
  # If KV Version 1 is detected
  echo "Detected KV Version 1"

  # Read the secret from path1
  SECRET=$(vault read -format=json $SRC_PATH | jq -r '.data')

  # Write the secret to path2
  vault write $DEST_PATH $(echo $SECRET | jq -r 'to_entries | map("\(.key)=\(.value|tostring)") | .[]')

else
  echo "Error: Unsupported KV version or path."
  exit 1
fi

echo "Secret copied from $SRC_PATH to $DEST_PATH successfully!"
