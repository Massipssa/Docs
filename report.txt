private def applyOverrideRules(
    creRuleDto: CreRuleDto,
    dateToApplyRules: LocalDate
): LocalDate = {

  val currentDay = dateToApplyRules.getDayOfMonth
  val lastDayOfMonth = dateToApplyRules.`with`(TemporalAdjusters.lastDayOfMonth()).getDayOfMonth

  creRuleDto.range_rule.foreach { rangeRule =>
    val ruleType = rangeRule.`type`

    if (ruleType == OVERRIDE_RULE_TYPE_CALENDAR) {
      val endDay = if (rangeRule.end == LAST_DAY_OF_MONTH) lastDayOfMonth
                   else rangeRule.end.toInt

      val startDay = rangeRule.start.toInt

      if (startDay <= currentDay && currentDay <= endDay) {
        return dateToApplyRules.plusMonths(rangeRule.offset)
      }
    } else {
      logger.warn(s"Rule of type $ruleType is not supported yet")
    }
  }

  throw new Exception(NO_OVERRIDE_RULE_APPLIED)
}
