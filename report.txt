// DynamicTable.js
import React, { useMemo } from 'react';
import { Box } from '@mui/material';
import MaterialReactTable from 'material-react-table';
import { format, eachDayOfInterval, parse } from 'date-fns';
import { enGB } from 'date-fns/locale';

function DynamicTable({ startDate, endDate }) {
  const data = [
    { date: '01/01/2023', name: 'Test', vacation: '1' },
    { date: '02/01/2023', name: 'Test2', vacation: '4' },
    // Add more data entries as needed
  ];

  const columns = useMemo(() => {
    if (!startDate || !endDate) return [];

    const dates = eachDayOfInterval({ start: startDate, end: endDate });
    return [
      { accessorKey: 'name', header: 'Name' },
      ...dates.map(date => ({
        accessorKey: format(date, 'dd/MM/yyyy'),
        header: format(date, 'dd/MM/yyyy'),
        cell: ({ row }) => {
          const rowData = data.find(item => item.date === format(date, 'dd/MM/yyyy'));
          return rowData ? rowData.vacation : '-';
        }
      }))
    ];
  }, [startDate, endDate, data]);

  const tableData = useMemo(() => {
    if (!startDate || !endDate) return [];

    const dates = eachDayOfInterval({ start: startDate, end: endDate });
    return data.map(item => ({
      name: item.name,
      ...dates.reduce((acc, date) => {
        acc[format(date, 'dd/MM/yyyy')] = item.date === format(date, 'dd/MM/yyyy') ? item.vacation : '-';
        return acc;
      }, {}),
    }));
  }, [startDate, endDate, data]);

  return (
    <Box sx={{ padding: 2 }}>
      <MaterialReactTable
        columns={columns}
        data={tableData}
      />
    </Box>
  );
}

export default DynamicTable;
