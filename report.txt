import React, { useState, useEffect } from 'react';
import { Paper } from '@mui/material';
import AccordionTable from './AccordionTable'; // Assuming AccordionTable is your accordion component
import StatsCards from './StatsCards'; // Assuming StatsCards is your card component

export default function CrePerVacationPage() {
  const [vacationId, date] = useState(null); // Assuming these come from a hook or API
  const [expandedAccordion, setExpandedAccordion] = useState(null); // Track expanded accordion

  // Fetch data (example API call logic)
  useEffect(() => {
    async function fetchData() {
      const apiUrl = `GET_VACATION_CRE?opdate=${date}&vacation=${vacationId}`;
      const data = await fetch(apiUrl).then(res => res.json());
      setData(data); // Assuming you store your data in a state
    }
    fetchData();
  }, [vacationId, date]);

  const cards = [
    { id: 0, title: 'EXPECTED_CRE', icon: <CheckCircleOutlineIcon />, size: data.expectedReceivedCre.length },
    { id: 1, title: 'EXPECTED_NOT_RECEIVED_CRE', icon: <WarningAmberIcon />, size: data.expectedNotReceivedCriticalCre.length },
    { id: 2, title: 'NOT_EXPECTED_RECEIVED_CRE', icon: <BlockIcon />, size: data.notExpectedReceivedCre.length }
  ];

  // Card click handler - expand corresponding accordion
  const handleCardClick = (id) => {
    setExpandedAccordion(prev => (prev === id ? null : id)); // Toggle accordion expansion
  };

  return (
    <Paper sx={{ padding: 2, mt: 2 }}>
      <VacationBreadcrumb /> {/* Assuming this is a breadcrumb component */}
      <StatsCards cards={cards} onClick={handleCardClick} /> {/* Pass the click handler to the cards */}

      {/* Accordion for Expected CRE */}
      <AccordionTable
        title="EXPECTED_CRE"
        expanded={expandedAccordion === 0}  // Accordion expands if the selected id matches
        data={data.expectedReceivedCre}
        icon={<CheckCircleOutlineIcon sx={{ mr: 1 }} />}
        columns={syntheseCreColumnsToDisplay}
        renderDetailPanel={renderCreDetails}
      />

      {/* Accordion for Expected but Not Received CRE */}
      <AccordionTable
        title="EXPECTED_NOT_RECEIVED_CRE"
        expanded={expandedAccordion === 1} // Accordion expands if the selected id matches
        data={data.expectedNotReceivedCriticalCre}
        icon={<WarningAmberIcon sx={{ mr: 1 }} />}
        columns={syntheseCreColumnsToDisplay}
        renderDetailPanel={renderCreDetails}
      />

      {/* Accordion for Not Expected but Received CRE */}
      <AccordionTable
        title="NOT_EXPECTED_RECEIVED_CRE"
        expanded={expandedAccordion === 2} // Accordion expands if the selected id matches
        data={data.notExpectedReceivedCre}
        icon={<BlockIcon sx={{ mr: 1 }} />}
        columns={syntheseCreColumnsToDisplay}
        renderDetailPanel={renderCreDetails}
      />
    </Paper>
  );
}
