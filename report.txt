val invalidColumns = areAllValuesEquals.filterNot(_._2).keys.toSeq

val windowSpec = Window.orderBy(lit(1))
val dfWithRowId = creDf.withColumn(ROW_NUMBER_COL, row_number().over(windowSpec))

val errors = invalidColumns.flatMap { colName =>
  dfWithRowId
    .select(ROW_NUMBER_COL, col(colName))
    .distinct() // Pour ne garder que les valeurs distinctes
    .collect()
    .map { row =>
      val rowId = row.getAs[Int](ROW_NUMBER_COL).toString
      val actualValue = Option(row.getAs[Any](colName)).map(_.toString).getOrElse("null")
      val expected = "Same value for all rows"

      CheckErrorDto(
        Option(rowId),
        Option(colName),
        Option(actualValue),
        Option(expected),
        Some(s"Column $colName is not consistent across all rows")
      )
    }
}
