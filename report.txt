import org.scalatest.flatspec.AnyFlatSpec
import org.scalatest.matchers.should.Matchers

class MetadataSorterSpec extends AnyFlatSpec with Matchers {

  "sortMetadataLineDtosOnEnvironment" should "prioritize the preferred environment" in {
    val dtos = Array(
      MetadataLineDto("D", "dev-dto"),
      MetadataLineDto("P", "prod-dto"),
      MetadataLineDto("T", "test-dto"),
      MetadataLineDto("P", "prod-dto-2")
    )

    val sorted = sortMetadataLineDtosOnEnvironment(dtos, "P")

    sorted.take(2).foreach(_.env shouldEqual "P")
    sorted.drop(2).foreach(_.env should not equal "P")
  }

  it should "return original order if no env matches" in {
    val dtos = Array(
      MetadataLineDto("D", "dev-dto"),
      MetadataLineDto("T", "test-dto")
    )

    val sorted = sortMetadataLineDtosOnEnvironment(dtos, "P")
    sorted shouldEqual dtos
  }
}
