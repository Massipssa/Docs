import org.scalatest.funsuite.AnyFunSuite
import org.apache.spark.sql.{DataFrame, SparkSession}
import org.apache.spark.sql.functions._
import your.package.{EnteteCdEfsAllowedValueCheck, CreCsvFilenameDto, CheckErrorDto}

class EnteteCdEfsAllowedValueCheckTest extends AnyFunSuite {

  val spark: SparkSession = SparkSession.builder()
    .appName("UnitTest")
    .master("local[*]")
    .getOrCreate()

  import spark.implicits._

  test("check should return empty list when all values are 'M6'") {
    val df: DataFrame = Seq("M6", "M6", "M6").toDF("_c0")
    val result: List[CheckErrorDto] = EnteteCdEfsAllowedValueCheck
      .check(df, CreCsvFilenameDto("dummy.csv"))

    assert(result.isEmpty)
  }

  test("check should return errors when values differ from 'M6'") {
    val df: DataFrame = Seq("M6", "X1", "M6", "Y2").toDF("_c0")
    val result: List[CheckErrorDto] = EnteteCdEfsAllowedValueCheck
      .check(df, CreCsvFilenameDto("dummy.csv"))

    assert(result.size == 2)
    assert(result.exists(_.value.contains("X1")))
    assert(result.exists(_.value.contains("Y2")))
  }
}
