import React from 'react';
import {
  Box,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Typography,
  Chip,
  List,
} from '@mui/material';
import { ErrorOutline as ErrorOutlineIcon } from '@mui/icons-material';
import { useNavigate } from 'react-router-dom';

// Define the interface for props
interface CreAccordionDetailsProps {
  selectedCRE: {
    objectName: string;
    vacation: string;
    opcDate: string;
    status: string;
    timestampOfReception: string;
    timestamp: string;
    errorDescription?: string;
  };
}

const CreAccordionDetails: React.FC<CreAccordionDetailsProps> = ({ selectedCRE }) => {
  const navigate = useNavigate();

  // Handle navigation to CRE details
  const handleCreDetails = (creName: string) => {
    navigate('/cre/details', { state: { creName } });
  };

  // Shared sx style for inline items
  const inlineTextStyle = {
    cursor: 'pointer',
    textDecoration: 'underline',
    color: 'blue',
  };

  return (
    <Box mt={2}>
      <Accordion defaultExpanded>
        <AccordionSummary>
          <Typography variant="h6" sx={{ ml: 1, bgcolor: 'LIGHT_GRAY_COLOR' }}>
            Détails du CRE: <strong>{selectedCRE.objectName}</strong>
          </Typography>
        </AccordionSummary>
        <AccordionDetails>
          <List dense>
            <InlineTextItemList title="CRE" value={selectedCRE.objectName} handleClick={() => handleCreDetails(selectedCRE.objectName)} />
            <InlineTextItemList title="Vacation" value={selectedCRE.vacation} />
            <InlineTextItemList title="Date OPC" value={selectedCRE.opcDate} />
            <InlineTextItemList title="Statut" value={selectedCRE.status} />
            <InlineTextItemList title="Heure de réception" value={selectedCRE.timestampOfReception} />
            <InlineTextItemList title="Heure d'intégration" value={selectedCRE.timestamp} />

            {/* Only display the error description if it exists */}
            {selectedCRE.errorDescription && (
              <InlineTextItemList
                title="Description de l'erreur"
                value={selectedCRE.errorDescription}
                error
              />
            )}
          </List>
        </AccordionDetails>
      </Accordion>
    </Box>
  );
};

// Reusable InlineTextItemList component
interface InlineTextItemListProps {
  title: string;
  value: string;
  handleClick?: () => void;
  error?: boolean;
}

const InlineTextItemList: React.FC<InlineTextItemListProps> = ({ title, value, handleClick, error = false }) => {
  return (
    <Typography component="span" sx={handleClick ? inlineTextStyle : {}}>
      {title}: {value}
      {error && (
        <Chip
          icon={<ErrorOutlineIcon color="error" />}
          label={value}
          color="error"
          sx={{ ml: 1 }}
        />
      )}
    </Typography>
  );
};

export default CreAccordionDetails;
