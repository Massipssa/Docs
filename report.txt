import React from "react";
import { Paper, Chip, Typography } from "@mui/material";
import { format } from "date-fns";

// DynamicTable Component
const DynamicTable = ({ values }) => {
  const title = "CRE Integration";
  const { activityStartDate, activityEndDate } = values || {};

  // Ensure dates are formatted properly
  const formattedStart = activityStartDate ? format(new Date(activityStartDate), 'yyyyMMdd') : '';
  const formattedEnd = activityEndDate ? format(new Date(activityEndDate), 'yyyyMMdd') : '';

  // Fetch data here (this part of the logic depends on your actual API and query handling)

  const data = [...];  // Placeholder for your API data (from query or context)

  if (!data || !Array.isArray(data)) {
    return <Typography>No data available</Typography>;
  }

  // Create columns based on dates (unique opcDate values)
  const uniqueDates = [...new Set(data.map(item => item.opcDate))];

  const columns = uniqueDates.map(date => ({
    accessorKey: date,
    header: format(new Date(date), 'dd/MM/yyyy'),
    cell: ({ row }) => {
      const rowData = row.original;  // Get current row data
      const currentVacation = rowData.vacations.find(v => v.opcDate === date);  // Find vacation for this date
      return (
        <Typography>
          {currentVacation ? `${currentVacation.vacation}:${currentVacation.opcDate}` : '-'}
        </Typography>
      );
    },
  }));

  // Rows with CRE names and vacation:opcdate data
  const tableData = data.map(item => ({
    objectName: item.objectName,
    vacations: data.filter(d => d.objectName === item.objectName),  // Filter by CRE name
  }));

  return (
    <Paper>
      <Typography variant="h6">{title}</Typography>
      <ObjectTable
        columns={columns}
        data={tableData}
        pageSize={5}
        showActions={false}
      />
    </Paper>
  );
};

export default DynamicTable;
