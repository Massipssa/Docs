import React from "react";
import {
  Paper,
  Typography,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
} from "@mui/material";
import { format, parse, isValid } from "date-fns";

// DynamicTable Component
const DynamicTable = ({ values }) => {
  const title = "CRE Integration";

  // Sample data (from your API or context)
  const data = [
    {
      objectName: "GLRAX",
      opcDate: "20240923",
      vacation: 1,
      status: "Ingested",
    },
    {
      objectName: "GLRAX",
      opcDate: "20240924",
      vacation: 2,
      status: "Ingested",
    },
    {
      objectName: "7X007",
      opcDate: "20240924",
      vacation: 3,
      status: "Ingested",
    },
    {
      objectName: "7X002",
      opcDate: "20240923",
      vacation: 4,
      status: "Ingested",
    },
    // Add more data as necessary...
  ];

  // Extract unique opcDate values to form the table columns
  const uniqueDates = [...new Set(data.map(item => item.opcDate))];

  // Prepare table data with CRE names and their corresponding vacation dates
  const creNames = [...new Set(data.map(item => item.objectName))];

  return (
    <Paper>
      <Typography variant="h6" gutterBottom>{title}</Typography>
      <TableContainer component={Paper}>
        <Table>
          {/* Table Head */}
          <TableHead>
            <TableRow>
              <TableCell><strong>CRE Name</strong></TableCell>
              {uniqueDates.map((date, index) => (
                <TableCell key={index} align="center">
                  {isValid(parse(date, 'yyyyMMdd', new Date()))
                    ? format(parse(date, 'yyyyMMdd', new Date()), 'dd/MM/yyyy')
                    : date}
                </TableCell>
              ))}
            </TableRow>
          </TableHead>

          {/* Table Body */}
          <TableBody>
            {creNames.map((creName, index) => (
              <TableRow key={index}>
                {/* CRE Name Column */}
                <TableCell>{creName}</TableCell>

                {/* Vacation:opcDate columns for each date */}
                {uniqueDates.map((date, dateIndex) => {
                  const vacationForDate = data.find(
                    (item) => item.objectName === creName && item.opcDate === date
                  );
                  return (
                    <TableCell key={dateIndex} align="center">
                      {vacationForDate ? `${vacationForDate.vacation}:${vacationForDate.opcDate}` : '-'}
                    </TableCell>
                  );
                })}
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>
    </Paper>
  );
};

export default DynamicTable;
