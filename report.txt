def existAnyContentInCsv(): Option[CheckErrorDto] = {
  try {
    val delimiter: Char = dataCheckResources.creDelimiter.charAt(0)
    val credDf = createDfFromCsv(key, delimiter)

    // Check if DataFrame has any non-empty values
    if (!existAnyContentInCsv(credDf)) {
      return Some(CheckErrorDto(
        Option.empty,
        Option.empty,
        getDescription,
        Option.empty,
        Some("CSV with empty data content"),
        Some("CSV with non-empty data content")
      ))
    }

    // If no issue found, CSV is valid
    dataCheckResources.creDf = Some(credDf)
    dataCheckResources.creDfNumLines = SparkUtility.getDataFrameRowCount(credDf)
    None

  } catch {
    case _: Throwable =>
      Some(CheckErrorDto(
        Option.empty,
        Option.empty,
        getDescription,
        Option.empty,
        Some("An invalid CSV file"),
        Some("A valid CSV file")
      ))
  }
}
