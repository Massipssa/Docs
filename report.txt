import React from "react";
import { Paper, Typography } from "@mui/material";
import { format, parse, isValid } from "date-fns";

// DynamicTable Component
const DynamicTable = ({ values }) => {
  const title = "CRE Integration";
  const { activityStartDate, activityEndDate } = values || {};

  // Sample data from your API
  const data = [
    {
      vacation: 1,
      opcDate: "20240922",
      objectIntegratedNb: 218,
      objectName: "CRE1",
      status: "Ingested",
    },
    {
      vacation: 2,
      opcDate: "20240923",
      objectIntegratedNb: 179,
      objectName: "CRE1",
      status: "Ingested",
    },
    {
      vacation: 3,
      opcDate: "20240924",
      objectIntegratedNb: 180,
      objectName: "CRE2",
      status: "Ingested",
    },
    {
      vacation: 4,
      opcDate: "20240924",
      objectIntegratedNb: 180,
      objectName: "CRE2",
      status: "Ingested",
    },
    // Add more data as necessary...
  ];

  // Extract unique opcDate values to form the table columns
  const uniqueDates = [...new Set(data.map(item => item.opcDate))];

  // Create columns for each unique date
  const columns = [
    {
      accessorKey: 'objectName',
      header: 'CRE Name',
    },
    ...uniqueDates.map(date => ({
      accessorKey: date,
      header: isValid(parse(date, 'yyyyMMdd', new Date()))
        ? format(parse(date, 'yyyyMMdd', new Date()), 'dd/MM/yyyy')
        : date,  // Ensure the date is valid before formatting
      cell: ({ row }) => {
        const creVacations = row.original.vacations;
        const vacationForDate = creVacations.find(vacation => vacation.opcDate === date);
        return (
          <Typography>
            {vacationForDate ? `${vacationForDate.vacation}:${vacationForDate.opcDate}` : '-'}
          </Typography>
        );
      },
    })),
  ];

  // Group data by CRE name
  const tableData = [...new Map(data.map(item => [item.objectName, {
    objectName: item.objectName,
    vacations: data.filter(d => d.objectName === item.objectName), // Group vacations by CRE
  }])).values()];

  return (
    <Paper>
      <Typography variant="h6">{title}</Typography>
      <ObjectTable
        columns={columns}
        data={tableData}
        pageSize={5}
        showActions={false}
      />
    </Paper>
  );
};

export default DynamicTable;
