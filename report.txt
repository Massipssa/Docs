import React from "react";
import { Paper, Typography } from "@mui/material";
import { format, parse, isValid } from "date-fns";

// DynamicTable Component
const DynamicTable = ({ values }) => {
  const title = "CRE Integration";
  const { activityStartDate, activityEndDate } = values || {};

  // Ensure dates are formatted properly
  const formattedStart = activityStartDate
    ? format(new Date(activityStartDate), 'yyyyMMdd')
    : '';
  const formattedEnd = activityEndDate
    ? format(new Date(activityEndDate), 'yyyyMMdd')
    : '';

  // Fetch data (this would be done via API or passed through props/context)
  const data = [
    {
      vacation: 1,
      opcDate: "20240922",
      objectIntegratedNb: 218,
      objectName: "CRE1",
      status: "Ingested",
    },
    {
      vacation: 2,
      opcDate: "20240923",
      objectIntegratedNb: 179,
      objectName: "CRE2",
      status: "Ingested",
    },
    // Add other entries here...
  ];

  // Check if the data is available
  if (!data || !Array.isArray(data)) {
    return <Typography>No data available</Typography>;
  }

  // Create columns based on unique opcDates (as headers)
  const uniqueDates = [...new Set(data.map(item => item.opcDate))];

  const columns = uniqueDates.map(date => ({
    accessorKey: date,
    header: isValid(parse(date, 'yyyyMMdd', new Date()))
      ? format(parse(date, 'yyyyMMdd', new Date()), 'dd/MM/yyyy')
      : date, // Ensure the date is valid before formatting
    cell: ({ row }) => {
      const rowData = row.original;
      const currentVacation = rowData.vacations.find(v => v.opcDate === date);
      return (
        <Typography>
          {currentVacation ? `${currentVacation.vacation}:${currentVacation.opcDate}` : '-'}
        </Typography>
      );
    },
  }));

  // Prepare table data with CRE names and their corresponding vacation dates
  const tableData = data.map(item => ({
    objectName: item.objectName,
    vacations: data.filter(d => d.objectName === item.objectName), // Filter by CRE name
  }));

  return (
    <Paper>
      <Typography variant="h6">{title}</Typography>
      <ObjectTable
        columns={columns}
        data={tableData}
        pageSize={5}
        showActions={false}
      />
    </Paper>
  );
};

export default DynamicTable;
