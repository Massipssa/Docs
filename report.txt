import React from 'react';
import { Card, CardContent, Typography, Box, List, ListItem, ListItemButton, ListItemText } from '@mui/material';
import { PieChart, PieSeries } from '@mui/x-charts';

// Sample data for the pies
const dataSets = [
  { id: 1, total: 100, warning: 20, failed: 30, passed: 50 },
  { id: 2, total: 150, warning: 40, failed: 30, passed: 80 },
  { id: 3, total: 200, warning: 50, failed: 60, passed: 90 },
  { id: 4, total: 250, warning: 70, failed: 80, passed: 100 },
];

const PieCard = ({ data }) => {
  const totalChecks = data.total;
  const pieData = [
    { id: 'Warning', value: data.warning, color: '#FFCC00' },
    { id: 'Failed', value: data.failed, color: '#FF5252' },
    { id: 'Passed', value: data.passed, color: '#4CAF50' },
  ];

  const handleClick = (id) => {
    alert(`Clicked on ${id} checks`);
  };

  return (
    <Card sx={{ width: 300, margin: '0 10px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
      <CardContent>
        <Typography variant="h6" align="center" gutterBottom>
          Check Results
        </Typography>
        {/* Center the Pie Chart */}
        <Box sx={{ position: 'relative', height: '250px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>
          <PieChart
            series={[
              {
                innerRadius: 50, // Adjust the size of the donut hole
                outerRadius: 80, // Reduce the overall pie size
                data: pieData,
                valueKey: 'value',
                idKey: 'id',
                colorKey: 'color',
              },
            ]}
            width={250} // Reduce the overall size of the chart
            height={250}
            sx={{ display: 'flex', justifyContent: 'center' }}
            onClick={(event) => {
              const clickedId = event.target.__data__.id;
              handleClick(clickedId);
            }}
          />
          {/* Display the total number of checks in the center */}
          <Typography
            variant="h6"
            align="center"
            sx={{
              position: 'absolute',
              top: '50%',
              left: '50%',
              transform: 'translate(-50%, -50%)',
              pointerEvents: 'none', // Prevent clicking on the text in the middle
            }}
          >
            {totalChecks} Checks
          </Typography>
        </Box>

        {/* Legend centered */}
        <List sx={{ display: 'flex', justifyContent: 'center', paddingTop: 2 }}>
          {pieData.map((item) => (
            <ListItem key={item.id} disablePadding>
              <ListItemButton
                onClick={() => handleClick(item.id)} // Make legend item clickable
              >
                <Box
                  sx={{
                    width: 16,
                    height: 16,
                    backgroundColor: item.color,
                    marginRight: 1,
                    borderRadius: '50%',
                  }}
                />
                <ListItemText primary={`${item.id}: ${(item.value / totalChecks * 100).toFixed(2)}%`} />
              </ListItemButton>
            </ListItem>
          ))}
        </List>
      </CardContent>
    </Card>
  );
};

const App = () => {
  return (
    <Box
      sx={{
        display: 'flex',
        justifyContent: 'center', // Center the cards horizontally
        alignItems: 'center',
        padding: 2,
        flexWrap: 'nowrap', // Ensure cards stay in one row without wrapping
      }}
    >
      {dataSets.map((data) => (
        <PieCard key={data.id} data={data} />
      ))}
    </Box>
  );
};

export default App;
